name: build and push
on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  IMAGE_TAG: 8
  INIT_NAME: mysql-base

jobs:
  build_n_push:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform: [ 'linux/amd64','linux/arm64' ]
    steps:
      - uses: actions/checkout@v4
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: run container to init
        run: |
          docker run --platform ${{ matrix.platform }} --rm -d --name ${{ env.INIT_NAME }} -e MYSQL_DATABASE=testing \
          -e MYSQL_USER=testing -e MYSQL_PASSWORD=testing -e MYSQL_ROOT_PASSWORD=testing  -e MYSQL_ROOT_HOST="%" \
          -v ./mysql:/var/lib/mysql mysql:${{ env.IMAGE_TAG }}

      - name: Wait for Netbird to connect to signal
        shell: bash
        timeout-minutes: 1
        run: |
          while [ -z "$(docker logs ${{ env.INIT_NAME }} 2>&1 | grep -c '/usr/sbin/mysqld: ready for connections' | grep 2)" ]; do
            echo "Waiting init container..."
            sleep 1
          done

      - name: stop init container
        run: docker stop mysql-base

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ env.IMAGE_TAG }}

      -
        name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Docker build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          push: true
          platforms: ${{ matrix.platform }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
